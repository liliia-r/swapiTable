{"version":3,"file":"./main.a52e316c2b50d75fd54f.js","mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,MAAM;AACN,eAAe;AACf;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;;AAEA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,4BAA4B;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,UAAU;AACV;AACA;AACA;AACA;;AAEA;;AAEA,UAAU;AACV;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,cAAc;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,mBAAmB;AACpD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA,kBAAkB;;AAElB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,gBAAgB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,+CAA+C,QAAQ;AACvD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA,YAAY;AACZ;AACA;AACA;;AAEA,YAAY;AACZ;AACA;AACA;;AAEA,YAAY;AACZ;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,CAAC;AACD;AACA;AACA;AACA;AACA,EAAE,KAA0B,oBAAoB,CAAE;AAClD;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;;;;;;;;ACjvBA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;;;;;UClCA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;ACNA;AACA;AACA","sources":["webpack:///../node_modules/@babel/runtime/regenerator/index.js","webpack:///./js/fetchSwapi.js","webpack:///./js/renderTable.js","webpack:///./index.html","webpack:///./scss/styles.scss?329f","webpack:///../node_modules/regenerator-runtime/runtime.js","webpack:///../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./index.js"],"sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","export async function getPlanets(page) {\n    let resultArr = [];\n\n    const planets = await fetch(`https://swapi.dev/api/planets/?page=${page}`)\n        .then((response) => response.json())\n        .then((result) => result.results)\n        .catch((error) => console.error(`Planets failed to load ${error}`));\n\n    await Promise.all(\n        planets.map(async (planet) => {\n            try {\n                const residents = planet.residents.map((residentUrl) =>\n                    fetch(residentUrl)\n                );\n                const mappedResidents = await Promise.all(residents);\n                planet.residents = await getResidents(mappedResidents);\n            } catch (error) {\n                console.error(\"Resident failed to load\", error);\n            }\n\n            planet.residents.forEach((resident) => {\n                resident.species.forEach((specie) => {\n                    resultArr.push({\n                        planet: planet.name,\n                        residentName: resident.name,\n                        specie,\n                    });\n                });\n            });\n        })\n    );\n    return resultArr;\n}\n\nasync function getResidents(mappedResidents) {\n    try {\n        const residentsData = await Promise.all(\n            mappedResidents.map(async (mappedResident) => {\n                const residentsList = await mappedResident.json();\n                const species = await getSpecies(residentsList);\n                return { name: residentsList.name, species };\n            })\n        );\n        return residentsData;\n    } catch (error) {\n        console.error(\"Resident failed to load\", error);\n    }\n}\n\nasync function getSpecies(residentsList) {\n    if (!residentsList.species.length) {\n        return [\"Human\"];\n    }\n    try {\n        const residentsSpecies = residentsList.species.map((url) => fetch(url));\n        const dataSpecies = await Promise.all(residentsSpecies);\n        const parsedDataSpecies = await Promise.all(\n            dataSpecies.map((item) => {\n                return item.json();\n            })\n        );\n        const speciesNames = parsedDataSpecies.map((specie) => specie.name);\n\n        return speciesNames;\n    } catch (error) {\n        console.error(\"Error: \", `${residentsList.species} failed to load`);\n    }\n}\n","import { getPlanets } from \"./fetchSwapi\";\n\nconst pages = document.querySelectorAll(\".pages__button\");\nconst table = document.querySelector(\".table__body\");\n\nexport function getPage(event) {\n    pages.forEach((page) => {\n        page.classList.remove(\"pages__button--active\");\n    });\n    event.target.classList.add(\"pages__button--active\");\n    const pageNumber = event.target.innerHTML;\n    renderTable(pageNumber);\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => renderTable(\"1\"));\npages.forEach((page) => {\n    page.addEventListener(\"click\", (event) => getPage(event));\n});\n\nexport function createTable(el) {\n    let { planet, residentName, specie } = el;\n    const row = document.createElement(\"tr\");\n\n    let planetName = document.createElement(\"td\");\n    planetName.innerHTML = planet;\n\n    let resident = document.createElement(\"td\");\n    resident.innerHTML = residentName;\n\n    let speciesName = document.createElement(\"td\");\n    speciesName.innerHTML = specie;\n\n    row.appendChild(planetName);\n    row.appendChild(resident);\n    row.appendChild(speciesName);\n    table.appendChild(row);\n}\n\nfunction getLoader() {\n    table.innerHTML =\n        '<tr><td class=\"load-container\" colspan=\"3\"><div class=\"loader\"></div></td></tr>';\n}\n\nexport async function renderTable(page) {\n    getLoader();\n    let result = await getPlanets(page);\n    table.innerHTML = \"\";\n    result.map((element) => createTable(element));\n}\n","// Module\nvar code = \"<!DOCTYPE html>\\r\\n<html lang=\\\"en\\\">\\r\\n    <head>\\r\\n        <meta charset=\\\"UTF-8\\\" />\\r\\n        <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\" />\\r\\n        <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"ie=edge\\\" />\\r\\n        <title>Star Wars</title>\\r\\n    </head>\\r\\n    <body>\\r\\n        <header class=\\\"header\\\">\\r\\n            <h1 class=\\\"header__title\\\">Star Wars Table</h1>\\r\\n        </header>\\r\\n\\r\\n        <main class=\\\"main\\\">\\r\\n            <div class=\\\"container\\\">\\r\\n                <table class=\\\"table\\\">\\r\\n                    <thead class=\\\"table__header\\\">\\r\\n                        <tr>\\r\\n                            <td>Planet</td>\\r\\n                            <td>Resident</td>\\r\\n                            <td>Specie</td>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody class=\\\"table__body\\\"></tbody>\\r\\n                </table>\\r\\n\\r\\n                <div class=\\\"pages__container\\\">\\r\\n                    <p class=\\\"pages\\\">Pages:</p>\\r\\n                    <ol class=\\\"pages__list\\\">\\r\\n                        <li\\r\\n                            type=\\\"submit\\\"\\r\\n                            class=\\\"pages__button pages__button--active\\\"\\r\\n                            id=\\\"page1\\\"\\r\\n                        >\\r\\n                            1\\r\\n                        </li>\\r\\n                        <li type=\\\"submit\\\" class=\\\"pages__button\\\" id=\\\"page2\\\">\\r\\n                            2\\r\\n                        </li>\\r\\n                        <li type=\\\"submit\\\" class=\\\"pages__button\\\" id=\\\"page3\\\">\\r\\n                            3\\r\\n                        </li>\\r\\n                        <li type=\\\"submit\\\" class=\\\"pages__button\\\" id=\\\"page4\\\">\\r\\n                            4\\r\\n                        </li>\\r\\n                        <li type=\\\"submit\\\" class=\\\"pages__button\\\" id=\\\"page5\\\">\\r\\n                            5\\r\\n                        </li>\\r\\n                        <li type=\\\"submit\\\" class=\\\"pages__button\\\" id=\\\"page6\\\">\\r\\n                            6\\r\\n                        </li>\\r\\n                    </ol>\\r\\n                </div>\\r\\n            </div>\\r\\n        </main>\\r\\n    </body>\\r\\n</html>\\r\\n\";\n// Exports\nexport default code;","// extracted by mini-css-extract-plugin\nexport {};","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import \"./scss/styles.scss\";\r\nimport \"./index.html\";\r\nimport { getPlanets } from \"./js/fetchSwapi\";\r\nimport { getPage } from \"./js/renderTable\";\r\n"],"names":["getPlanets","page","resultArr","fetch","then","response","json","result","results","error","console","planets","Promise","all","map","planet","residents","residentUrl","mappedResidents","getResidents","forEach","resident","species","specie","push","name","residentName","mappedResident","residentsList","getSpecies","residentsData","length","residentsSpecies","url","dataSpecies","item","parsedDataSpecies","speciesNames","pages","document","querySelectorAll","table","querySelector","getPage","event","classList","remove","target","add","pageNumber","innerHTML","renderTable","addEventListener","createTable","el","row","createElement","planetName","speciesName","appendChild","getLoader","element"],"sourceRoot":""}